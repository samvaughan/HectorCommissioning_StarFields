
# The final output 
rule all:
    input:
        completed_flag_file = f"results/{config['output_folder']}/completed.txt"

# Make the mosaic using our input files
rule make_mosaic:
    # input:
    #     config_filename = expand("config/Field_{field}_m20.yaml", field=config['FIELD'])
    output:
        output_image = expand("results/Mosaics/Panstarrs_Mosiac_{field}_m20.fits", field=config['FIELD'])
    conda:
        "envs/scientific_python.yaml"
    script:
        "scripts/make_mosaic.py"

# Run profound on this mosaic
rule run_profound_on_mosaic:
    input:
        #config_filename = expand("config/Field_{field}_m20.yaml", field=config['FIELD']),
        input_image = rules.make_mosaic.output.output_image
    output:
        profound_mask = expand("results/SkyMasks/Mosaic/segmap_StarField_{field}_-22.fits", field=config['FIELD']),
        profound_catalogue = expand("results/ProfoundCatalogues/profound_catalogue_{field}_-22.csv", field=config['FIELD'])
    conda:
        "envs/scientific_python.yaml"
    script:
        "scripts/run_profound_mosaic.py"



# Select stars for our fields
rule select_stars:
    # input:
    #     config_filename = expand("config/Field_{field}_m20.yaml", field=config['FIELD'])
    output:
        targets_file = "results/StarCatalogues/Panstarrs_match_Gaia_{field}_m20_targets.csv".format(field=config['FIELD'])
        standards_file = "results/StarCatalogues/Panstarrs_match_Gaia_{field}_m20_standards.csv".format(field=config['FIELD'])
        guides_file = "results/StarCatalogues/Panstarrs_match_Gaia_{field}_m20_guides.csv".format(field=config['FIELD'])
    conda:
        "envs/scientific_python.yaml"
    script:
        "scripts/select_star_fields.py"


# Run the tiling code
rule run_tiling:
    input: 
        config_filename = config['filename'],
        targets_file = rules.select_stars.output.targets_file
        standards_file = rules.select_stars.output.standards_file
        guides_file = rules.select_stars.output.guides_file
        profound_skymask = rules.run_profound_on_mosaic.output.profound_mask
    output:
        completed_flag_file = rules.all.input.completed_flag_file